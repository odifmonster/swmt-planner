from .job import Job, JobView

import datetime as dt
from swmtplanner.support import SwmtBase, HasID, FloatRange, DateRange
from swmtplanner.swmttypes.materials import Lot

__all__ = ['Job', 'JobView', 'Schedule']

class Schedule(SwmtBase, HasID[str]):
    def __init_subclass__(cls, read_only: tuple[str, ...] = tuple(),
                          priv: tuple[str, ...] = tuple()) -> None: ...
    def __init__(self, prefix: str, sched_id: str, date_rng: DateRange, hrs_open: FloatRange,
                 days_open: FloatRange) -> None: ...
    @property
    def date_rng(self) -> DateRange: ...
    @property
    def hrs_open(self) -> FloatRange: ...
    @property
    def days_open(self) -> FloatRange: ...
    @property
    def end(self) -> dt.datetime: ...
    @property
    def rem_time(self) -> dt.timedelta: ...
    @property
    def jobs(self) -> list[JobView]: ...
    @property
    def prod_jobs(self) -> list[JobView]: ...
    def can_add_cycle(self, min_date: dt.datetime, cycle_time: dt.timedelta) -> bool: ...
    def can_add_lots(self, lots: list[Lot], cycle_time: dt.timedelta) -> bool: ...
    def add_lots(self, lots: list[Lot], cycle_time: dt.timedelta) \
        -> tuple[Schedule, list[Job]]: ...
    def activate(self) -> None: ...
    def deactivate(self) -> None: ...