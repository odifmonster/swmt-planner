from typing import NewType, Hashable
import datetime as dt
from swmtplanner.support import SwmtBase, HasID, Quantity
from swmtplanner.support.grouped import Data, DataView
from swmtplanner.items import GreigeStyle, FabricStyle
from swmtplanner.materials import Snapshot

__all__ = ['RMAlloc', 'Status', 'ARRIVED', 'EN_ROUTE', 'RawMat', 'RawMatView']

class RMAlloc[T: Hashable](SwmtBase, HasID[int],
                           read_only=('id','raw_mat_id','qty','avail_date')):
    def __init__(self, raw_mat: RawMat[T], qty: Quantity) -> None: ...
    @property
    def raw_mat_id(self) -> T: ...
    @property
    def qty(self) -> Quantity: ...
    @property
    def avail_date(self) -> dt.datetime: ...

Status = NewType('Status', str)
ARRIVED: Status = ...
EN_ROUTE: Status = ...

class RawMat[T: Hashable](Data[T]):
    def __init_subclass__(cls, read_only: tuple[str, ...] = tuple(),
                          priv: tuple[str, ...] = tuple()) -> None: ...
    def __init__(self, prefix: str, id: T, view: RawMatView[T],
                 item: GreigeStyle | FabricStyle, status: Status,
                 receipt_date: dt.datetime, qty: Quantity, **kwargs) -> None: ...
    snapshot: Snapshot | None
    @property
    def item(self) -> GreigeStyle | FabricStyle: ...
    @property
    def status(self) -> Status: ...
    @property
    def receipt_date(self) -> dt.datetime: ...
    @property
    def qty(self) -> Quantity: ...
    def allocate(self, amount: Quantity, snapshot: Snapshot | None = None) -> None: ...
    def deallocate(self, piece: RMAlloc[T], snapshot: Snapshot | None = None) -> None: ...
        
class RawMatView[T: Hashable](DataView[T]):
    def __init_subclass__(cls, dunders: tuple[str, ...] = tuple(),
                          attrs: tuple[str, ...] = tuple(),
                          funcs: tuple[str, ...] = tuple(),
                          read_only: tuple[str, ...] = tuple(),
                          priv: tuple[str, ...] = tuple()) -> None: ...
    def __init__(self, link: RawMat[T], **kwargs) -> None: ...
    @property
    def item(self) -> GreigeStyle | FabricStyle: ...
    @property
    def status(self) -> Status: ...
    @property
    def receipt_date(self) -> dt.datetime: ...
    @property
    def qty(self) -> Quantity: ...